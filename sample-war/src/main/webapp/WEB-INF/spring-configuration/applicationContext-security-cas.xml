<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	   		
	   		http://www.springframework.org/schema/tx 
	   		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	   		
	   		http://www.springframework.org/schema/context
	   		http://www.springframework.org/schema/context/spring-context-3.1.xsd
	   		
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
					   
			http://www.springframework.org/schema/util 
			http://www.springframework.org/schema/util/spring-util-3.1.xsd
			
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
			
			http://www.springframework.org/schema/jee 
			http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
			
			http://www.springframework.org/schema/security
			http://www.springframework.org/schema/security/spring-security.xsd"
	default-lazy-init="false">



	<http pattern="/logout.html" security="none"
		disable-url-rewriting="true" />
	<http pattern="/error401.html" security="none"
		disable-url-rewriting="true" />
	<http pattern="/error403.html" security="none"
		disable-url-rewriting="true" />
	<http pattern="/error404.html" security="none"
		disable-url-rewriting="true" />
	<http pattern="/error500.html" security="none"
		disable-url-rewriting="true" />
	<http pattern="/error503.html" security="none"
		disable-url-rewriting="true" />
	<http pattern="/errorNA.html" security="none"
		disable-url-rewriting="true" />


	<http auto-config='true' use-expressions="true"
		disable-url-rewriting="true" entry-point-ref="casEntryPoint">
		<intercept-url pattern="/*" access="hasRole('ROLE_01')" />
		<access-denied-handler error-page="/error403.html" />
		<custom-filter ref="casFilter" position="CAS_FILTER" />
		<custom-filter ref="requestSingleLogoutFilter" before="LOGOUT_FILTER" />
		<custom-filter ref="singleLogoutFilter" before="CAS_FILTER" />
		<logout invalidate-session="true" logout-url="/logout/cas"
			logout-success-url="/logout.html" />
	</http>
	<!-- This filter handles a Single Logout Request from the CAS Server -->
	<beans:bean id="singleLogoutFilter"
		class="org.jasig.cas.client.session.SingleSignOutFilter" />
	<!-- This filter redirects to the CAS Server to signal Single Logout should 
		be performed -->
	<beans:bean id="requestSingleLogoutFilter"
		class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<beans:constructor-arg value="${cas.server.url}/logout" />
		<beans:constructor-arg>
			<beans:bean
				class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
		</beans:constructor-arg>
		<beans:property name="filterProcessesUrl" value="/logout/cas" />
	</beans:bean>
	<beans:bean id="serviceProperties"
		class="org.springframework.security.cas.ServiceProperties">
		<beans:property name="service"
			value="${application.serviceUri}/login/cas" />
		<beans:property name="sendRenew" value="false" />
	</beans:bean>
	<beans:bean id="casEntryPoint"
		class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
		<beans:property name="loginUrl"
			value="${cas.server.url}/login" />
		<beans:property name="serviceProperties" ref="serviceProperties" />
	</beans:bean>
	<!-- Handles a Single Logout Request from the CAS Server must be in custom-filter 
		of security.xml -->

	<!-- authenticates CAS tickets, must be in custom-filter of security.xml -->
	<beans:bean id="casFilter"
		class="org.springframework.security.cas.web.CasAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
	</beans:bean>
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="casAuthProvider" />
	</authentication-manager>
	<beans:bean id="casAuthProvider"
		class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
		<beans:property name="ticketValidator" ref="ticketValidator" />
		<beans:property name="serviceProperties" ref="serviceProperties" />
		<beans:property name="key" value="sample-war" />
		<beans:property name="authenticationUserDetailsService"
			ref="authenticationUserDetailsService" />
		<!-- <beans:property name="statelessTicketCache" ref="statelessTicketCache" 
			/> -->
	</beans:bean>
	<beans:bean id="ticketValidator"
		class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
		<beans:constructor-arg value="${cas.server.url}" />
		<beans:property name="proxyCallbackUrl"
			value="${cas.server.proxyCallbackUrl}" />
		<beans:property name="proxyGrantingTicketStorage" ref="proxyGrantingTicketStorage" />
	</beans:bean>
	<beans:bean id="proxyGrantingTicketStorage"
		class="com.farmafene.cas.integration.wss.ProxyGrantingTicketStorageForTicketServer">
		<beans:property name="retrieveUrl"
			value="${cas.server.proxyRetrieveUrl}" />
	</beans:bean>
	<beans:bean id="authenticationUserDetailsService"
		class="com.farmafene.cas.integration.spring.CasUserDetailsService" />
</beans:beans>
	